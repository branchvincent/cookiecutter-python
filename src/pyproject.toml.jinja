[tool.poetry]
name = "{{project_name | lower | replace(' ', '-') | replace('_', '-')}}"
version = "0.1.0"
description = "{{project_description}}"
authors = ["{{author_name}} <{{author_email}}>"]
repository = "https://github.com/{{repo_username}}/{{repo_name}}"
packages = [{ include = "{{project_name}}", from = "src" }]
{%- if private %}
classifiers = ["Private :: Do Not Upload"]
{%- endif %}

[tool.poetry.dependencies]
python = "^3.9"

[tool.poetry.dev-dependencies]
black = "*"
flake8 = "*"
isort = "*"
{% if docs -%}
mkdocs = "*"
mkdocs-material = "*"
{% endif -%}
mypy = "*"
pre-commit = "*"
pyproject-flake8 = "*"
pytest = "*"
taskipy = "*"

[tool.taskipy.tasks]
clean = { cmd = "rm -rf .mypy_cache/ .pytest_cache/ build/ dist/ *.egg-info", help = "Remove build artifacts" }
{% if docs -%}
docs = { cmd = "mkdocs serve -f docs/mkdocs.yaml", help = "Serve documentation"}
{% endif -%}
lint = { cmd = "pre-commit run --all-files", help = "Run linters and formatters" }
test = { cmd = "pytest", help = "Run tests" }
release = { cmd = "semantic-release publish", help = "Release new version" }

[tool.flake8]
max-line-length = 88
extend-ignore = "E203"

[tool.isort]
profile = "black"

[tool.mypy]
strict = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.semantic_release]
branch = "main"
version_variable = "pyproject.toml:version"
commit_subject = "chore(release): v{version}"
commit_message = "[ci skip]"
commit_author = "github-actions <action@github.com>"
build_command = "poetry build"
{% if private -%}
upload_to_pypi = false
{% endif -%}
changelog_file = ".gitignore"

[build-system]
requires = ["poetry-core>=1.0"]
build-backend = "poetry.core.masonry.api"
